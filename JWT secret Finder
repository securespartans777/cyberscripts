#!/bin/bash

# Tool: JWT Secret Finder
# Created by: SOMA HARISH REDDY MANNEM (OSCP Certified)

domain=$1

if [ -z "$domain" ]; then
  echo "Usage: $0 example.com"
  exit 1
fi

if [[ "$domain" == *.*.* ]]; then
  echo "[!] Warning: You entered a likely subdomain. Use a root domain like yahoo.com for better results."
fi

echo "[*] Enumerating subdomains..."
subfinder -d "$domain" -silent -exclude-sources digitorus >> subs.txt 2>/dev/null || echo "[!] subfinder failed, continuing..."
amass enum -passive -d "$domain" >> subs.txt 2>/dev/null
sort -u subs.txt -o subs.txt

echo "[*] Probing for live hosts..."
cat subs.txt | httpx -silent > live.txt

echo "[*] Extracting JavaScript files from Wayback Machine..."
cat live.txt | waybackurls | grep '\.js$' | sort -u > js_files.txt

echo "[*] Downloading JS files and analyzing..."
mkdir -p js_content

> jwt_tokens.txt
> secrets.txt
> postmsg.txt
> endpoints.txt

while read -r js; do
  fname=$(echo "$js" | md5sum | cut -d' ' -f1)
  curl -s "$js" -o "js_content/$fname.js"
  echo "[+] Downloaded: $js"

  # Analyze for JWTs
  grep -Eo 'eyJ[a-zA-Z0-9_-]{10,}\.[a-zA-Z0-9_-]{10,}\.[a-zA-Z0-9_-]{10,}' "js_content/$fname.js" >> jwt_tokens.txt

  # Analyze for secrets
  grep -Eoi 'api_key|secret|client_id|token|auth|bearer|access_token|redirect_uri' "js_content/$fname.js" >> secrets.txt

  # Analyze for postMessage
  grep -Eoi 'postMessage|messageEvent|addEventListener\(["'"'"']?message' "js_content/$fname.js" >> postmsg.txt

  # Extract endpoints
  grep -Eo 'https?://[a-zA-Z0-9_.-]+(/[^\s"'"'"']*)?' "js_content/$fname.js" >> endpoints.txt

done < js_files.txt

echo ""
echo "[âœ“] Recon Completed."
echo "--------------------------------------------------"
echo "JS Files: $(wc -l < js_files.txt)"
echo "JWTs Found: $(wc -l < jwt_tokens.txt)"
echo "Secrets Found: $(wc -l < secrets.txt)"
echo "postMessage uses: $(wc -l < postmsg.txt)"
echo "API Endpoints: $(wc -l < endpoints.txt)"
echo "--------------------------------------------------"
